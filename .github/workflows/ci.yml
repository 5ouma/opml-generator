name: 🎽 CI

on:
  push:
    branches:
      - main
    paths:
      - "**.ts"
      - deno.lock
      - .github/workflows/ci.yml
  pull_request:
    paths:
      - "**.ts"
      - deno.lock
      - .github/workflows/ci.yml

permissions: {}

jobs:
  lint-check:
    name: 🧹 Lint Check
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: 🚚 Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: 🦕 Set up Deno
        id: setup-deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          cache: true

      - name: 📦 Install dependencies
        if: ${{ steps.setup-deno.outputs.cache-hit != 'true' }}
        run: deno install --frozen

      - name: 🧹 Lint check
        run: deno lint

      - name: 📚 Lint JSDoc
        run: deno doc --lint ./src

  format-check:
    name: 📝 Format Check
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: 🚚 Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: 🦕 Set up Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3

      - name: 📝 Format check
        run: deno fmt --check

  type-check:
    name: 🔍 Type Check
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: 🚚 Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: 🦕 Set up Deno
        id: setup-deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          cache: true

      - name: 📦 Install dependencies
        if: ${{ steps.setup-deno.outputs.cache-hit != 'true' }}
        run: deno install --frozen

      - name: 🔍 Type check
        run: deno check --doc

  test:
    name: 🧪 Test
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: 🚚 Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: 🦕 Set up Deno
        id: setup-deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          cache: true

      - name: 📦 Install dependencies
        if: ${{ steps.setup-deno.outputs.cache-hit != 'true' }}
        run: deno install --frozen

      - name: 🧪 Run tests
        run: deno task test:cov

      - name: ☂️ Upload coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: ☂️ Upload test results
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  dry-run-publish:
    name: 📦 Dry Run Publish
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: 🚚 Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: 🦕 Set up Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3

      - name: 📦 Dry run publish
        run: deno publish --dry-run
